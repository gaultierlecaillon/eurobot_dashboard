version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: eurobot_mongodb_dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data_dev:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - eurobot-network-dev

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: eurobot_backend_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGODB_URI: ${MONGODB_URI}
      PORT: ${PORT}
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./data:/app/data:ro
    networks:
      - eurobot-network-dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: eurobot_frontend_dev
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NODE_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - eurobot-network-dev

volumes:
  mongodb_data_dev:

networks:
  eurobot-network-dev:
    driver: bridge
